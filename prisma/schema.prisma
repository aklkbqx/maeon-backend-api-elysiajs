generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model activities {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(255)
  description       String?
  duration          Int?
  cost              Decimal?            @db.Decimal(10, 2)
  location_id       Int
  createdat         DateTime?           @default(now()) @db.Timestamp(6)
  updatedat         DateTime?           @default(now()) @db.Timestamp(6)
  locations         locations           @relation(fields: [location_id], references: [id], map: "activities_locationid_fkey")
  programactivities programactivities[]

  @@index([location_id], map: "idx_activity_location")
}

model locations {
  id             Int           @id @default(autoincrement())
  name           String        @db.VarChar(255)
  type           Int
  description    String?
  address        String?
  subdistrict_id Int?
  website        String?       @db.VarChar(255)
  latitude       Decimal?      @db.Decimal(10, 8)
  longitude      Decimal?      @db.Decimal(11, 8)
  owner_id       Int
  createdat      DateTime?     @default(now()) @db.Timestamp(6)
  updatedat      DateTime?     @default(now()) @db.Timestamp(6)
  activities     activities[]
  users          users         @relation(fields: [owner_id], references: [id])
  subdistricts   subdistricts? @relation(fields: [subdistrict_id], references: [id], onDelete: Restrict)
  locationtype   locationtype  @relation(fields: [type], references: [id])

  @@index([name], map: "idx_location_name")
  @@index([owner_id], map: "idx_location_owner")
  @@index([subdistrict_id], map: "idx_location_subdistrict")
  @@index([type], map: "idx_location_type")
}

model locationtype {
  id        Int         @id @default(autoincrement())
  name      String      @unique @db.VarChar(50)
  locations locations[]
}

model programs {
  id                  Int                 @id @default(autoincrement())
  type                Int
  name                String              @db.VarChar(255)
  description         String
  start               Json
  end                 Json
  duration            Int
  total_price         Decimal             @db.Decimal(8, 2)
  wellness_dimensions String              @default(dbgenerated("CURRENT_TIMESTAMP"))
  createdat           DateTime            @db.Timestamp(6)
  updatedat           DateTime            @db.Timestamp(6)
  programtypes        programtypes        @relation(fields: [type], references: [id])
  programactivities   programactivities[]
}

model programactivities {
  id             Int        @id @default(autoincrement())
  program_id     Int
  activity_id    Int
  start_time     DateTime
  end_time       DateTime
  sequence_order Int
  program        programs   @relation(fields: [program_id], references: [id])
  activity       activities @relation(fields: [activity_id], references: [id])
}

model programtypes {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(255)
  description String
  createdat   DateTime?  @default(now()) @db.Timestamp(6)
  updatedat   DateTime?  @default(now()) @db.Timestamp(6)
  programs    programs[]
}

model subdistricts {
  id        Int         @id @default(autoincrement())
  name      String      @unique @db.VarChar(100)
  createdat DateTime?   @default(now()) @db.Timestamp(6)
  updatedat DateTime?   @default(now()) @db.Timestamp(6)
  locations locations[]
}

model users {
  id               Int            @id @default(autoincrement())
  firstname        String         @db.VarChar(150)
  lastname         String         @db.VarChar(150)
  email            String         @unique @db.VarChar(150)
  password         String         @db.VarChar(60)
  tel              String         @db.VarChar(20)
  profilepicture   String         @default("default-profile.jpg") @db.VarChar(150)
  role             user_role      @default(USER)
  usage_status     usage_status   @default(OFFLINE)
  statuslastupdate DateTime       @default(now()) @db.Timestamp(6)
  account_status   account_status @default(ACTIVE)
  createdat        DateTime?      @default(now()) @db.Timestamp(6)
  updatedat        DateTime?      @default(now()) @db.Timestamp(6)
  locations        locations[]

  @@index([email], map: "idx_email")
  @@index([role], map: "idx_role")
}

enum account_status {
  DELETE
  ACTIVE
  SUSPEND
}

enum usage_status {
  OFFLINE
  ONLINE
}

enum user_role {
  USER
  ADMIN
  HOSPITAL
  MERCHANT
  TOUR
  LEARNING_RESOURCE
  HOTEL
  SEASONAL_TRAVEL
}
